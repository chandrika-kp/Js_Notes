
Escaping Literal Quotes in Strings:
----------------------------------

In JavaScript, you can escape a quote from considering it as an end of string quote by placing a backslash (\) in front of the quote.

const sampleStr = "Alan said, \"Peter is learning JavaScript\".";
output--->Alan said, "Peter is learning JavaScript"

Escape Sequences in Strings
-------------------------------
Quotes are not the only characters that can be escaped inside a string. Escape sequences allow you to use characters you may not otherwise be able to use in a string.

Code	Output
\'	single quote
\"	double quote
\\	backslash
\n	newline
\t	tab
\r	carriage return
\b	word boundary
\f	form feed

+ operator is used with a String value, it is called the concatenation operator

Concatenating Strings with the Plus Equals Operator
---------------------------------------------------
let ourStr = "I come first. ";
ourStr += "I come second.";  // I come first. I come second..



Constructing Strings with Variables
-------------------------------------
const myName = "hello";
const myStr = "Hi " + myName + " everyone";  //Hi hello eveyone

STRING METHODS
------------------

LENGTH
To get the length of a String value by writing .length after the string variable or string literal.
const lastName = "Lovelace";
console.log(lastName.length); // 8

Bracket notation is a way to get a character at a specific index within a string.
They start at 0. This is referred to as Zero-based indexing.
const firstName = "Charles";
let firstLetter = firstName[0]; // C
let firstLetter = firstName[2]; // a

to get the last letter of a string, you can subtract one from the string's length.******
const firstName = "Ada";
const lastLetter = firstName[firstName.length - 1]; //a

You can use the same principle we just used to retrieve the last character in a string to retrieve the Nth-to-last character.
const firstName = "Augusta";
const thirdToLastLetter = firstName[firstName.length - 3];//s

String values are immutable, which means that they cannot be altered once created.
let myStr = "Bob";
myStr[0] = "J";
Note that this does not mean that myStr could not be re-assigned. The only way to change myStr would be to assign it with a new value, like this:

let myStr = "Bob";
myStr = "Job";

